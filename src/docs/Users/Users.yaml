paths:
  /users/:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Usuario(s) encontrado(s).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor.

  /users/byid/{uid}:
    get:
      summary: Obtiene los datos de un usuario por ID
      tags:
      - Users
      parameters:
        - in: path
          name: uid
          required: true
          description: Identificador único del usuario.
          schema:
            $type: String
      responses:
        "200":
          description: Datos del usuario.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: No se ha encontrado el usuario con ese ID.
        "500":
          description: Error interno del servidor.

  /users/email/{email}:
    get:
      summary: Obtiene los datos de un usuario por Email
      tags:
      - Users
      parameters:
        - in: path
          name: email
          required: true
          description: Correo electronico único del usuario.
          schema:
            $type: String
      responses:
        "200":
          description: Datos del usuario.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: No se ha encontrado el usuario con ese correo.
        "500":
          description: Error interno del servidor.

  /users/register/:
    post:
      summary: Crea un usuario nuevo
      tags:
      - Users
      parameters:
        - in: path
          name: email
          required: true
          description: Creacion del usuario.
          schema:
            $type: String
      responses:
        "200":
          description: Usuario creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Correo electronico siendo utilizado por otro usuario.
        "500":
          description: Error interno del servidor.

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id generado por MongoDb.
        first_name:
          type: String
          description: Nombre del usuario.
        last_name:
          type: String
          description: Apellido del usuario.
        email:
          type: String
          description: Correo electrónico del usuario.
        age:
          type: Integer
          description: Edad del usuario.
        password:
          type: String
          format: password
          description: Contraseña hasheada del usuario.
        rol:
          type: string
          enum: [admin, user, premium]
          description: Rol permitidos.
        cart:
          type: array
          description: Carrito del usuario
    example: 
      _id: ObjectId(“156346484xdfhdhcdsd”)
      first_name: Alfredo
      last_name: Carrasquel
      email: alfredo@alfredo.com
      age: 30
      password: qwertyuiop
      rol: user
